import React, { useEffect, useState } from "react";
import Header from "../../components/Header/index";
import { Chart } from "react-google-charts";
import useAuth from "../../hooks/useAuth";
import * as C from "./styles";
import { BsFillExclamationTriangleFill, BsFillExclamationCircleFill, BsFillExclamationDiamondFill } from "react-icons/bs";

const Dashboard = () => {
  const { token } = useAuth();
  const [cardAsset, setCardAsset] = useState({});
  const [cardVulnerability, setCardVulnerability] = useState({});
  const [cardRisk, setCardRisk] = useState({});
  const [topAssets, setTopAssets] = useState([]);
  const [chartData, setChartData ] = useState([]);
  const [chartData2, setChartData2 ] = useState([]);
  const [severity, setSeverity] = useState({});
  
  useEffect(() => {
    async function getCardAsset() {
      const response = await fetch(
        'http://201.49.62.134:8080/api/dashboard/cards/asset',
        {headers: {Authorization: `Token ${token}`}}
      );
      const resultApi = await response.json();
      setCardAsset(resultApi);
    }
    getCardAsset();

    async function getCardVulnerability() {
      const response = await fetch(
        'http://201.49.62.134:8080/api/dashboard/cards/vulnerability',
        { headers: { Authorization: `Token ${token}`}}
      );
      const resultApi = await response.json();
      setCardVulnerability(resultApi);
    }
    getCardVulnerability();

    async function getCardRisk() {
      const response = await fetch(
        'http://201.49.62.134:8080/api/dashboard/cards/risk',
        { headers: { Authorization: `Token ${token}`}}
      );
      const resultApi = await response.json();
      setCardRisk(resultApi);
    }
    getCardRisk();

    async function getTopAssets() {
      const response = await fetch(
        'http://201.49.62.134:8080/api/dashboard/charts/top-assets',
        { headers: { Authorization: `Token ${token}`}}
      );
      const resultApi = await response.json();
      setTopAssets(resultApi);
    }
    getTopAssets();

    async function getSeverity() {
      const response = await fetch(
        'http://201.49.62.134:8080/api/dashboard/charts/severity',
        { headers: { Authorization: `Token ${token}`}}
      );
      const resultApi = await response.json();
      setSeverity(resultApi);
    }
    getSeverity();

    
  }, [token]);

  useEffect(() => { 
    const data = topAssets.map((e) => Object.values(e))
    setChartData([["host", "vuln_count"], ...data])
    
    const dataSeverity = Object.entries(severity)
    setChartData2([["severity", "level"], ...dataSeverity])
  }, [topAssets, severity]);

  return (
  <>
      <Header />
    <C.Container>
      <C.CardF>
        <C.Card>
          <BsFillExclamationTriangleFill />
          <C.Title>Asset Count:</C.Title>
          <C.Title>{cardAsset.asset_count}</C.Title>
          <C.Title>Vulnerable Asset Count:</C.Title>
          <C.Title>{cardAsset.vulnerable_asset_count}</C.Title>
        </C.Card>
        <C.Card>
          <BsFillExclamationCircleFill />
          <C.Title>Vulnerable Count:</C.Title>
          <C.Title>{cardVulnerability.vuln_count}</C.Title>
          <C.Title>Active Vulnerable Count:</C.Title>
          <C.Title>{cardVulnerability.active_vuln_count}</C.Title>
        </C.Card>
        <C.Card>
          <BsFillExclamationDiamondFill />
          <C.Title>Risk:</C.Title>
          <C.Title>{cardRisk.risk_avg}</C.Title>
        </C.Card>
      </C.CardF>
      <C.CardF>
        <C.CardG>
          <Chart chartType="PieChart" data={chartData} width={"100%"} height={"400px"} />
        </C.CardG>
        <C.CardG>
          <Chart chartType="Bar" data={chartData2} width={"100%"} height={"400px"} />
        </C.CardG>
      </C.CardF>
    </C.Container>
    </>
  )
}

export default Dashboard;